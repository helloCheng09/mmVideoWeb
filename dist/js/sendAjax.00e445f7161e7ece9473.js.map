{"version":3,"sources":["webpack:///./src/js/sendAjax.js"],"names":["root","SendAjax","this","isFirst","prototype","init","postMd","sourceDelegate","url","data","_this","$","ajax","type","dataType","beforeSend","beforeFn","success","res","_arg","successFn","apply","error","errorFn","getMd","empty","append","cateidArr","renderData","renderCate","cateArr","length","cate_child","find","parent","attr","lesListUrl","cate_id","pageInit","initPageCom","renderPageCom","videoSrc","links","__webpack_require__","e","then","t","bind","module","default","detPlayer","code","videoUrl","videos_id","lessonData","is_buy_lesson","layer","open","title","content","hide","show","index","confirm","btn","yes","location","reload","close","console","log","myLesList","dataArr","myListLen","pageNum","Math","ceil","obj","total","per_page","arr","len","sumLen","result","i","push","slice","spliteArr","renderChargeCode","clearInterval","chargeTimer","jumpTo","msg","sendAjax","exports","window","mylib"],"mappings":"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","file":"./js/sendAjax.00e445f7161e7ece9473.js","sourcesContent":["(function (root) {\r\n    // 构造函数\r\n    function SendAjax() {\r\n        // 变量\r\n        this.isFirst = true\r\n    }\r\n\r\n    // 原型方法\r\n\r\n    SendAjax.prototype = {\r\n\r\n        // 初始化\r\n        init: function () {\r\n            // console.log('我是sendinit')\r\n        },\r\n        // POST Module\r\n        postMd: function (sourceDelegate, url, data) {\r\n            var _this = this\r\n            $.ajax({\r\n                url: url,\r\n                type: 'POST',\r\n                data: data,\r\n                dataType: 'JSON',\r\n                beforeSend: _this.beforeFn,\r\n                success: function (res) {\r\n                    var _arg = [sourceDelegate, res, data]\r\n                    _this.successFn.apply(_this, _arg)\r\n                },\r\n                error: _this.errorFn\r\n            })\r\n        },\r\n\r\n        /**\r\n         * GET Module\r\n         * @param {事件源} sourceDelegate \r\n         * @param {地址} url \r\n         * @param {数据} data \r\n         */\r\n        getMd: function (sourceDelegate, url, data) {\r\n            var _this = this\r\n            $.ajax({\r\n                url: url,\r\n                type: 'GET',\r\n                data: data,\r\n                dataType: 'JSON',\r\n                beforeSend: _this.beforeFn(sourceDelegate),\r\n                success: function (res) {\r\n                    var _arg = [sourceDelegate, res, data]\r\n                    _this.successFn.apply(_this, _arg)\r\n                },\r\n                error: _this.errorFn\r\n            })\r\n        },\r\n        // beforeSend\r\n        beforeFn: function (sourceDelegate) {\r\n\r\n            if (sourceDelegate == 'centerLes' || sourceDelegate == 'lesList') {\r\n                var loadingText = `\r\n                    <div class=\"loading-bx\">\r\n                        <div class=\"loading-text\">\r\n                            努力加载中...\r\n                        </div>\r\n                    </div>\r\n                `\r\n                $('.insert_les_list').empty().append(loadingText)\r\n            }\r\n        },\r\n\r\n        // success\r\n        /**\r\n         * \r\n         * @param {事件源判断} sourceDelegate \r\n         * @param {获取的数据} res \r\n         * @param {被点击的分类id} cateidArr \r\n         */\r\n        successFn: function (sourceDelegate, res, cateidArr) {\r\n            var _this = this\r\n            if (sourceDelegate == 'centerLes') {\r\n                // console.log('课程分类渲染')\r\n                // console.log(res)\r\n                root.renderData.renderCate(res, cateidArr) //渲染分类\r\n                var cateArr = res.data\r\n                if (cateArr.length) {\r\n                    var cate_child = cateArr[cateArr.length - 1][0]['id'] // 获取最后一个分类的第一个 获取数据\r\n                } else {\r\n                    var cate_child = $('.select_fl:last-child').find('.select').parent('.fl_tag').attr('data-id')\r\n                }\r\n                let sourceDelegate = 'lesList'\r\n                let data = {\r\n                    cate_child: cate_child\r\n                }\r\n                // console.log(root)\r\n                let url = root.lesListUrl\r\n                this.getMd(sourceDelegate, url, data) // 发送后台获取课程列表\r\n\r\n            } else if (sourceDelegate == 'lesList') {\r\n                // console.log(2222, res)\r\n                // 实例化分页组件\r\n                // if (res.pages != 1) {\r\n                //     res.sourceDelegate = 'lesList'\r\n                //     root.renderData.initPageCom(res)\r\n                // } \r\n                var cate_child = $('.select_fl:last-child').find('.select').parent('.fl_tag').attr('data-id')\r\n                res.sourceDelegate = 'lesList'\r\n                res.cate_id = cate_child\r\n                if (!root.pageInit) {\r\n                    root.renderData.renderPageCom(res)\r\n                } else {\r\n                    root.renderData.initPageCom(res)\r\n                    root.pageInit = false\r\n                }\r\n                // console.log(root.pageInit)\r\n                // root.renderData.renderLesList(res)\r\n                // root.renderData.renderLesList(res) //渲染对应分类课程\r\n            } else if (sourceDelegate == 'myMsg') {\r\n                if (!root.pageInit) {\r\n                    root.renderData.renderPageCom(res) // 非首页渲染\r\n                } else {\r\n                    root.renderData.initPageCom(res) //首页初始化\r\n                    root.pageInit = false\r\n                }\r\n            } else if (sourceDelegate == 'videoSrc') {\r\n                root.videoSrc[0] = res.data.links\r\n                import( /* webpackChunkName: \"init\" */ './init.js').then(module => {\r\n                    var init = module.default;\r\n                    init.detPlayer()\r\n                });\r\n            } else if (sourceDelegate == 'buyLes') {\r\n                if (res.data.code == '1') {\r\n                    var sourceDelegate = 'videoSrc'\r\n                    var url = root.videoUrl\r\n                    var data = {\r\n                        videos_id: root.lessonData.videos_id\r\n                    }\r\n                    _this.getMd(sourceDelegate, url, data)\r\n                    root.is_buy_lesson = \"1\";\r\n                    layer.open({\r\n                        title: '提示',\r\n                        content: '购买成功！~'\r\n                    })\r\n                    $('.pre_play_b').hide() // 隐藏遮罩\r\n                    $('#myPlayBtn').show() // 显示播放按钮\r\n\r\n                } else {\r\n                    layer.open({\r\n                        title: '提示',\r\n                        content: '购买失败~~'\r\n                    })\r\n                }\r\n            } else if (sourceDelegate == 'lesPingfen') {\r\n                // 评分课程\r\n                if (res.data.code == '1') {\r\n                    var index = layer.confirm('评分提交成功~~', {\r\n                        title: \"提示\",\r\n                        btn: ['确定'],\r\n                        yes: function () {\r\n                            // 重新加载页面\r\n                            location.reload()\r\n                            layer.close(index);\r\n                        }\r\n                    });\r\n                } else {\r\n                    layer.open({\r\n                        title: '提示',\r\n                        content: '评分提交失败~~'\r\n                    })\r\n                }\r\n            } else if (sourceDelegate == 'myLesList') {\r\n                console.log(res)\r\n                // myLesList\r\n                root.myLesList = {\r\n                    data: []\r\n                }\r\n                // var cacheMyLes = [] //我的课程缓存全局\r\n                // $.each(res.data, function (index, item) {\r\n                var lesItem = { ...res.data\r\n                };\r\n                var dataArr = res.data\r\n                var myListLen = res.data.length\r\n                var pageNum = Math.ceil(myListLen / 6)\r\n                console.log(1111, pageNum)\r\n                // if (sum < myListLen) {\r\n                //     for (var i = 0; i < myListLen;  i+= 6) {\r\n                //         emptyObj.push(arr.slice(i, i+6))\r\n                //     }\r\n                // }\r\n\r\n               var emptyArr = spliteArr(dataArr, 6)\r\n                function spliteArr (arr, len) {\r\n                    var sumLen = arr.length\r\n                    var result = []\r\n                    for(var i = 0; i < sumLen; i +=len){\r\n                        result.push(arr.slice(i, i+len))\r\n                    }\r\n                    \r\n                    return result\r\n                }\r\n                // emptyObj.push(lesItem)\r\n                // })\r\n                // console.log(emptyObj)\r\n                // root.myLesList.data = emptyObj\r\n\r\n                var obj = {\r\n                    total: myListLen,\r\n                    per_page: 6,\r\n                    sourceDelegate: 'ueserLes',\r\n                    data: emptyArr\r\n                }\r\n                import( /* webpackChunkName: \"renderData\" */ './renderData').then(module => {\r\n                    var renderData = module.default;\r\n                    root.renderData.initPageCom(obj)\r\n                });\r\n\r\n            } else if (sourceDelegate == 'searchList') {\r\n                // console.log(res)\r\n                import( /* webpackChunkName: \"renderData\" */ './renderData').then(module => {\r\n                    var renderData = module.default;\r\n                    res.sourceDelegate = 'searchList'\r\n                    if (!root.pageInit) {\r\n                        root.renderData.renderPageCom(res)\r\n                    } else {\r\n                        root.renderData.initPageCom(res)\r\n                        root.pageInit = false\r\n                    }\r\n\r\n                });\r\n\r\n            } else if (sourceDelegate == 'chargeCode') {\r\n                import( /* webpackChunkName: \"renderData\" */ './renderData').then(module => {\r\n                    var renderData = module.default;\r\n                    res.sourceDelegate = 'chargeCode'\r\n                    $('.insert_code').empty()\r\n                    renderData.renderChargeCode(res)\r\n                });\r\n            } else if (sourceDelegate == 'chargeSuc') {\r\n                // console.log(res)\r\n                // 1 购买成功（刷新） 2还未扫码 3支付失败（刷面）\r\n                var codeRes = res.data.code\r\n                if (codeRes == 1) {\r\n                    clearInterval(root.chargeTimer)\r\n                    var index = layer.open({\r\n                        title: '提示',\r\n                        content: '购买成功!~', //刷新页面， 重新请求二维码\r\n                        yes: function () {\r\n                            var sourceDelegate = 'userChargeSuc'\r\n                            // 页面跳转\r\n                            import( /* webpackChunkName: \"init\" */ './init.js').then(module => {\r\n                                var init = module.default;\r\n                                init.jumpTo(sourceDelegate)\r\n                            });\r\n                            layer.close(index);\r\n                        }\r\n                    })\r\n\r\n                }\r\n                // switch (codeRes) {\r\n                //     case 1:\r\n                //         var index = layer.open({\r\n                //             title: '提示',\r\n                //             content: '充值成功!', //刷新页面， 重新请求二维码\r\n                //             yes: function () {\r\n                //                 var sourceDelegate = 'userChargeSuc'\r\n                //                 // 页面跳转\r\n                //                 import( /* webpackChunkName: \"init\" */ './init.js').then(module => {\r\n                //                     var init = module.default;\r\n                //                     init.jumpTo(sourceDelegate)\r\n                //                 });\r\n                //                 layer.close(index);\r\n                //             }\r\n                //         })\r\n\r\n                //         clearInterval(root.chargeTimer)\r\n                //         break;\r\n                //     case 2:\r\n                //         // layer.open({\r\n                //         //     title: '提示',\r\n                //         //     content: '购买成功'\r\n                //         // })\r\n                //         break;\r\n                //     case 3:\r\n                //     var index = layer.open({\r\n                //         title: '提示',\r\n                //         content: '哎呀~购买失败了~请重试', //刷新页面， 重新请求二维码\r\n                //         yes: function () {\r\n                //             var sourceDelegate = 'userChargeFail'\r\n                //             // 页面跳转\r\n                //             import( /* webpackChunkName: \"init\" */ './init.js').then(module => {\r\n                //                 var init = module.default;\r\n                //                 init.jumpTo(sourceDelegate)\r\n                //             });\r\n                //             layer.close(index);\r\n                //         }\r\n                //     })\r\n\r\n                //     clearInterval(root.chargeTimer)\r\n                //         break;\r\n                // }\r\n            }\r\n        },\r\n\r\n        // error\r\n        errorFn: function () {\r\n            layer.msg('网络链接失败~~')\r\n        }\r\n    }\r\n\r\n    // 实例化\r\n    var sendAjax = new SendAjax()\r\n    // 挂载全局\r\n    root.sendAjax = sendAjax\r\n\r\n    // 输出\r\n    module.exports = sendAjax\r\n}(window.mylib || (window.mylib = {})));"],"sourceRoot":""}